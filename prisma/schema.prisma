generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Product {
  id           Int      @id @default(autoincrement())
  title        String
  imageUrl     String?
  description  String?  @db.VarChar(1500)
  brand        String
  price        Float?
  stock        Json?
  createdAt    DateTime @default(now())
  model        String?
  category     String
  manufacturer String?
  specs        Json?
  manualUrl    String?
  isActive     Boolean  @default(true)
}

model User {
  id        Int       @id @default(autoincrement())
  email     String    @unique
  password  String
  role      Role      @default(CLIENTE)
  isActive  Boolean   @default(true)
  createdAt DateTime  @default(now())
  sales     Sale[]
  Reserva   Reserva[]
  Profile   Profile[]
}

model LibroReclamaciones {
  id          Int       @id @default(autoincrement())
  userId      Int
  createdAt   DateTime  @default(now())
  title       String    @db.VarChar(100)
  description String    @db.VarChar(1000)
}

model Profile {
  user_id Int    @id
  user    User   @relation(fields: [user_id], references: [id])
  dni     String
  name    String @db.VarChar(50)
}

model Sale {
  id        String     @id
  userId    Int
  createdAt DateTime   @default(now())
  total     Float
  status    Status     @default(PENDIENTE)
  user      User       @relation(fields: [userId], references: [id])
  SaleItem  SaleItem[]
}

model SaleItem {
  id              Int    @id @default(autoincrement())
  Sale            Sale   @relation(fields: [saleId], references: [id])
  saleId          String
  producto        String
  cantidad        String
  precio_base     String
  codigo_producto String
  codigo_sunat    String
  codigo_unidad   String
  tipo_igv_codigo String
}

model Reserva {
  id          Int           @id @default(autoincrement())
  userId      Int
  total       Float
  createdAt   DateTime      @default(now())
  status      Status        @default(PENDIENTE)
  notes       String?       @db.VarChar(1000)
  ReservaItem ReservaItem[]
  user        User          @relation(fields: [userId], references: [id])
}

model ReservaItem {
  id              Int     @id @default(autoincrement())
  reservaId       Int
  Reserva         Reserva @relation(fields: [reservaId], references: [id])
  producto        String
  cantidad        Int
  precio_base     Float
  codigo_producto String
}

enum Status {
  PENDIENTE
  CANCELADA
  CONFIRMADA
}

enum Role {
  GERENTE
  ALMACEN_VENTAS
  CLIENTE
}
